{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helper.js","componentes/Resultado.js","componentes/Resumen.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cotizarSeguro","e","preventDefault","plan","planBasicoRef","current","checked","infoAuto","marca","marcaRef","value","year","yearRef","cotizarSeg","React","createRef","planCompletoRef","onSubmit","name","ref","type","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resultado","resultado","mensaje","TransitionGroup","component","CSSTransition","key","timeout","enter","exit","Resumen","mostrarResumen","_this$props$datos","datos","componentes_Resultado","App","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","state","componentes_Header","componentes_Formulario","componentes_Resumen","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.787ed4b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className=\"top\">\r\n            <h1>{props.titulo}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nclass Formulario extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        /* \r\n            refs son para leer los valores de los campos de un formulario\r\n        */\r\n        this.marcaRef        = React.createRef();\r\n        this.yearRef         = React.createRef();\r\n        this.planBasicoRef   = React.createRef();\r\n        this.planCompletoRef = React.createRef();\r\n    }\r\n\r\n    cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n\r\n        //Leer el plan\r\n        const plan = this.planBasicoRef.current.checked ? 'basico' : 'completo'\r\n        \r\n        //Obtener los datos\r\n\r\n\r\n        //Crear el objeto\r\n        const infoAuto = {\r\n            marca: this.marcaRef.current.value,\r\n            year:  this.yearRef.current.value,\r\n            plan:  plan\r\n        }\r\n        \r\n        //Enviarlo al componente principal\r\n        this.props.cotizarSeg(infoAuto)\r\n\r\n        //Resetear el formulario (opcional)\r\n        // e.currentTarget.reset()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"contenedor-formulario\" \r\n                onSubmit={this.cotizarSeguro}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\"\r\n                            ref={this.marcaRef} \r\n                    >\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\"\r\n                            ref={this.yearRef}\r\n                    >\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input  type=\"radio\" \r\n                            name=\"plan\" \r\n                            value=\"basico\"\r\n                            ref={this.planBasicoRef}\r\n                    /> Básico\r\n\r\n                    <input  type=\"radio\" \r\n                            name=\"plan\" \r\n                            value=\"completo\"\r\n                            ref={this.planCompletoRef}\r\n                    /> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Formulario;\r\n","\r\nexport function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import React, { Component } from 'react';\r\n\r\n//transition group\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Resultado extends Component {\r\n    render() {\r\n        const resultado = this.props.resultado\r\n        const mensaje = (!resultado) ? 'Elije marca, año y tipo de seguro' : 'El total es: $'\r\n        return (\r\n            <div className=\"gran-total\">\r\n                {mensaje}\r\n                <TransitionGroup \r\n                                component=\"span\"\r\n                                className=\"resultado\">\r\n                    <CSSTransition \r\n                                className=\"resultado\"\r\n                                key={resultado}\r\n                                timeout={{enter: 500, exit: 500}}>\r\n                        <span>{resultado}</span>\r\n                    </CSSTransition>\r\n                    \r\n                </TransitionGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resultado;\r\n","import React, { Component } from 'react';\r\nimport { primeraMayuscula } from '../helper'\r\nimport Resultado from './Resultado'\r\n\r\nclass Resumen extends Component {\r\n\r\n    mostrarResumen = () => {\r\n        const {marca, year, plan} = this.props.datos\r\n\r\n        if(!marca || !year || !plan) { return null } \r\n\r\n        return (\r\n            <div className=\"resumen\">\r\n                <h2>Resumen de cotización</h2>\r\n                    <li>Marca: {primeraMayuscula(marca)}</li>\r\n                    <li>Plan: {primeraMayuscula(plan)}</li>\r\n                    <li>Año del auto {primeraMayuscula(year)}</li>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.mostrarResumen()}\r\n                <Resultado \r\n                         resultado={this.props.resultado}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resumen;\r\n","import React, { Component } from 'react'\n//Componente funcional Header\nimport Header from './Header';\n//Componente formulario . refs - props\nimport Formulario from './Formulario';\n//Componente resumen\nimport Resumen from \"./Resumen\";\n//Helper\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helper';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      resultado: '',\n      datos: {}\n    }\n  }\n\n  //\n  cotizarSeg = (datos) => {\n    const {marca, plan, year} = datos\n\n    //Agregar una base de 2000\n    let resultado = 2000\n\n    //Obtener la diferencia de años\n    const diferencia = obtenerDiferenciaAnio(year)\n\n    //Por cada año restar el 3% al valor del seguro\n    resultado -= ((diferencia * 3) * resultado) / 100\n\n    //Americano 15%, Asiatico 5% y Europeo 30% de incremento el valor actual\n    resultado = calcularMarca(marca) * resultado\n\n    //El plan del auto, el básico incremento el valor el 20% y el completo 50%\n    let incrementoPlan = obtenerPlan(plan)\n\n    //Dependiendo del plan - incrementar\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2)\n\n    //Crear objeto para el resumen\n    const datosAuto = {\n      marca: marca,\n      plan: plan,\n      year: year\n    }\n    \n    //Ya tenemos el costo\n    this.setState({\n      resultado: resultado,\n      datos: datosAuto\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n          <Header \n                titulo = 'Cotizador de seguro de auto'\n          />\n\n          <div className=\"formulario\">\n            <Formulario \n                      cotizarSeg={this.cotizarSeg}\n            />\n\n            <Resumen \n                  datos = {this.state.datos}\n                  resultado = {this.state.resultado}\n            />\n\n          </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/normalice.css'\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}